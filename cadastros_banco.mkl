@label("Cadastros") //xxx
domain cadastros

@label("Banco")
service banco {
	
	config {
		groupId: "br.com.kerubin.api"
		version: "1.0.0"
		cloudConfigUri: "http://localhost:9091"
		servicePort: 0
		
		messagingCore {version:"1.0.0"}
		databaseCore {version:"1.0.0"}
	}
	
	@publishEvents// (events=[created, updated, deleted]) 
	@auditing
	@label("Banco")
	entity Banco {
		
		numero: string[20] 
		label: "Número"
		autoComplete
		publishedInEvents
		web(styleClass: "ui-md-4")
		
		nome: string
		label: "Nome"
		autoComplete
		publishedInEvents
		listFilter(many: "Nome do(s) banco(s)")
		web(styleClass: "ui-md-8")
		
		rules {
			with(numero).apply(trimLeft("0"))
		}
	}
	
	@publishEvents
	@auditing
	@label("Agência bancária")
	entity AgenciaBancaria {
		
		banco: refers Banco manyToOne
		publishedInEvents
		web(styleClass: "ui-md-6")
		
		numeroAgencia: string[50] 
		autoComplete
		label: "Número da agência"
		publishedInEvents
		web(styleClass: "ui-md-5")
		
		digitoAgencia: string[10] 
		autoComplete(result)
		label: "Dígito"
		publishedInEvents
		web(styleClass: "ui-md-1")
		
		endereco: string? 
		autoComplete
		label: "Endereço/localização da agência"
		web(styleClass: "ui-md-6")
		
		nomeGerente: string?
		label: "Nome do gerente"
		web(styleClass: "ui-md-4")
		
		fone: string[50]?
		label: "Telefone da agência"
		web(styleClass: "ui-md-2")
		
		rules {
			with(numeroAgencia).apply(trimLeft("0"))
		}
		
	}
	
	@auditing
	@publishEvents
	@label("Bandeira de cartão")
	entity BandeiraCartao {
		
		nomeBandeira: string
		autoComplete
		publishedInEvents
		label: "Bandeira do cartão"
		listFilter(many: "Bandeira(s)")
		web(styleClass: "ui-md-12")
	}
	
	@auditing
	@publishEvents
	@label("Conta bancária")
	entity ContaBancaria {
		//--
		nomeTitular: string
		label: "Nome do títular da conta"
		publishedInEvents
		autoComplete
		web(styleClass: "ui-md-6")
		
		agencia: refers AgenciaBancaria manyToOne
		publishedInEvents
		web(styleClass: "ui-md-4")
		
		tipoContaBancaria: TipoContaBancaria
		label: "Tipo da conta"
		publishedInEvents
		web(styleClass: "ui-md-2")
		//--
		
		numeroConta: string[30] 
		autoComplete(result)
		label: "Número da conta"
		publishedInEvents
		listFilter(many: "Número da(s) conta(s)")
		web(styleClass: "ui-md-6")
		
		digito: string[10]? 
		autoComplete(result)
		label: "Dígito"
		publishedInEvents
		web(styleClass: "ui-md-2")
		
		saldo: money?
		label: "Saldo"
		web(styleClass: "ui-md-4")
		//--
		
		numeroCartao: string[50]?
		label: "Número do cartão"
		web(styleClass: "ui-md-8")
		
		codigoSeguranca: string[10]?
		label: "Código de segurança"
		web(styleClass: "ui-md-2")
		
		dataValidade: date?
		mask:"MM/yyyy"
		publishedInEvents
		label: "Validade"
		web(styleClass: "ui-md-2")
		//--
		
		bandeiraCartao: refers BandeiraCartao manyToOne
		label: "Bandeira do cartão"
		publishedInEvents
		web(styleClass: "ui-md-8")
		
		ativo: boolean
		label: "Conta ativa"
		publishedInEvents
		web(styleClass: "ui-md-4")
		//--
		
		rules {
			with(numeroConta).apply(trimLeft("0"))
		}
		
	}
	
	@publishEvents
	@auditing
	@label("Cartão de crédito")
	entity CartaoCredito {
		
		//--
		banco: refers Banco manyToOne
		publishedInEvents
		web(styleClass: "ui-md-6")
		
		nomeTitular: string
		autoComplete
		label: "Nome do títular do cartão"
		publishedInEvents
		web(styleClass: "ui-md-6")
		
		//--
		numeroCartao: string[50] 
		autoComplete
		label: "Número do cartão"
		publishedInEvents
		web(styleClass: "ui-md-6")
		
		validade: date?
		label: "Validade"
		mask:"mm/yy"
		publishedInEvents
		web(styleClass: "ui-md-2")
		
		codigoSeguranca: string[10]?
		label: "Código de segurança"
		web(styleClass: "ui-md-2")
		
		valorLimite: money?
		label: "Limite de crédito"
		publishedInEvents
		web(styleClass: "ui-md-2")
		
		//--
		bandeiraCartao: refers BandeiraCartao manyToOne
		label: "Bandeira do cartão"
		publishedInEvents
		web(styleClass: "ui-md-6")
		
		ativo: boolean
		label: "Cartão ativo"
		publishedInEvents
		web(styleClass: "ui-md-2")
		
	}
	
	@label("Conciliação bancária")
	entity ConciliacaoBancaria {
		
		id: uuid
		
		bancoId: string
		label: "Banco"
		web(styleClass: "ui-md-3" readOnly)
		
		agenciaId: string
		label: "Agência"
		web(styleClass: "ui-md-1" readOnly)
		
		contaId: string
		label: "Conta"
		web(styleClass: "ui-md-2"  readOnly)
		
		dataIni: date
		label: "Data inicial"
		web(styleClass: "ui-md-2" readOnly)
		
		dataFim: date
		label: "Data final"
		web(styleClass: "ui-md-2" readOnly)
		
		//transacoes: contains ConciliacaoTransacao optional many oneToMany
		
		situacaoConciliacao: SituacaoConciliacao
		web(styleClass: "ui-md-2" readOnly)
		
		rules {
			
			with(bancoId).apply(trimLeft("0"))
			with(agenciaId).apply(trimLeft("0"))
			with(contaId).apply(trimLeft("0"))
			
			with(form).apply(polling(callback: recarregarConciliacao))
			
			//with(form).apply(disableCUD).when(id.isNotNull)
			
			with(form.actions)
				.apply(function(name: aplicarConciliacaoBancaria params:[this] return: this))
				.when(id.isNotNull and situacaoConciliacao.isEquals(SituacaoConciliacao.TRANSACOES_ANALISADAS))
				.action(name: aplicarConciliacao button(tooltip: "Aplicar conciliação" label: "Aplicar conciliação" cssClass: "ui-button-success" icon: "pi pi-play"))
			
		}
	}
	//
	
	@label("Transações")
	//@labelMenu(")
	@auditing
	entity ConciliacaoTransacao {
		
		// Financial Institution Transaction ID <FITID>
		trnId: string
		label: "Identificador da transação"
		grid(hidden)
		
		/////
		trnData: date
		label: "Data"
		listFilter(between: "Movimento de;Até;Intervalo de tempo" default: "Personalizado")
		////  
		
		////
		trnHistorico: string
		label: "Histórico"
		listFilter(many: "Histórico" styleClass: "ui-md-6")
		// grid(showDataWithIcon)
		
		trnDocumento: string
		label: "Documento"
		listFilter(many: "Documento" styleClass: "ui-md-6")
		/////
		
		/////
		trnTipo: TipoTransacao
		web(styleClass: "ui-md-3")
		listFilter(isEqualTo: "Crédito/Débito" styleClass: "ui-md-3")
		
		trnValor: money
		label: "Valor"
		web(styleClass: "ui-md-9")
		listFilter(between: "Valores de;até;")
		////
		
		conciliacaoBancaria: /*container*/refers ConciliacaoBancaria manyToOne /*findBy(paged)*/
		listFilter(isEqualTo: "Conciliação bancária" styleClass: "ui-md-4" hidden)
		findBy
		grid(hidden)
		
		situacaoConciliacaoTrn: SituacaoConciliacaoTrn
		listFilter(isEqualTo: "Situação" styleClass: "ui-md-9")
		
		////
		tituloConciliadoId: uuid?
		label: "Id. tít. conc."
		grid(showDataWithIcon)		
		
		tituloConciliadoDesc: string?
		label: "Desc. tít. conc."
		
		//vencimentoTituloConciliado: date
		//label: "Venc. tít. conc."
		
		dataConciliacao: date?
		label: "Data da conciliação"
		
		conciliacaoTransacaoTitulos: contains ConciliacaoTransacaoTitulo?* oneToMany(opposite: conciliacaoTransacao fetch: eager) // avoid PersistenceBag errors
		/////
		
		conciliadoComErro: boolean?
		label: "Erro"
		listFilter(isNotNull: "Com erro" styleClass: "ui-md-3")
		grid(hidden)
		
		conciliadoMsg: string?
		label: "Mensagem"
		grid(showDataWithIcon)
		
		rules {
			
			with(formList).apply(polling(callback: recarregarTransacoes))
			
		}
	}
	
	@label("Títulos da transação de conciliação")
	entity ConciliacaoTransacaoTitulo {
		conciliacaoTransacao: refers ConciliacaoTransacao manyToOne
		
		tituloConciliadoId: uuid
		label: "Id. título"
		
		tituloConciliadoDesc: string
		label: "Descrição título"
		
		tituloConciliadoDataVen: date
		label: "Data vencimento"
		
		tituloConciliadoDataPag: date?
		label: "Data pagamento"
		
		dataConciliacao: date?
		label: "Data da conciliação"
		
		situacaoConciliacaoTrn: SituacaoConciliacaoTrn
		listFilter(isEqualTo: "Situação" styleClass: "ui-md-9")
	}
	
	@label("Situação da transação de conciliação")
	enum SituacaoConciliacaoTrn {
		NAO_CONCILIADO
		label: "Não conciliado"
		default
		
		CONCILIAR_CONTAS_PAGAR
		label: "Conciliar ao contas a pagar"
		
		CONCILIADO_CONTAS_PAGAR
		label: "Conciliado no contas a pagar"	
			
		CONTAS_PAGAR_BAIXADO_SEM_CONCILIACAO
		label: "Baixado no contas a pagar sem conciliação"		
		
		CONCILIAR_CONTAS_RECEBER
		label: "Conciliar ao contas a receber"
		
		CONCILIADO_CONTAS_RECEBER
		label: "Conciliado no contas a receber"
		
		CONTAS_RECEBER_BAIXADO_SEM_CONCILIACAO
		label: "Baixado no contas a receber sem conciliação"
		
		CONCILIAR_CAIXA
		label: "Conciliar ao caixa"
		
		CONCILIADO_CAIXA
		label: "Conciliado no caixa"
		
		CAIXA_BAIXADO_SEM_CONCILIACAO
		label: "Baixado no caixa sem conciliação"
		
		ERRO
		label: "Erro na conciliação"
		
		CANCELADO
		label: "Conciliação cancelada"
	}
	
	@label("Situação da conciliação")
	enum SituacaoConciliacao {
		NAO_CONCILIADO
		label: "Não conciliado"
		default
		
		ANALISANDO_TRANSACOES
		label: "Analisando transações"
		
		TRANSACOES_ANALISADAS
		label: "Transações analisadas"
		
		CONCILIANDO_TRANSACOES
		label: "Conciliando transações"
		
		CONCILIADO
		label: "Conciliado"
		
		CONCILIADO_COM_ERRO
		label: "Conciliado com erro"
		
		CANCELADO
		label: "Cancelado"
	}
	
	@label("Tipo da transação")
	enum TipoTransacao {
		CREDITO
		label: "Crédito"
		default
		
		DEBITO
		label: "Débito"
		
		OUTROS
		label: "Outros"
	}
	
	@label("Tipo da conta bancária")
	enum TipoContaBancaria { 
		CONTA_CORRENTE
		label: "Conta corrente"
		default
		
		CONTA_POUPANCA
		label: "Conta poupança"
		
		CONTA_SALARIO
		label: "Conta salário"
		
		CONTA_INVESTIMENTO
		label: "Conta investimento"
	}
	
}