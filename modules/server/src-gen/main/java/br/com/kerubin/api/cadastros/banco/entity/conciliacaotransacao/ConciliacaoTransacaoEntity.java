/**********************************************************************************************
Code generated by MKL Plug-in
Copyright: Kerubin - kerubin.platform@gmail.com

WARNING: DO NOT CHANGE THIS CODE BECAUSE THE CHANGES WILL BE LOST IN THE NEXT CODE GENERATION.
***********************************************************************************************/

package br.com.kerubin.api.cadastros.banco.entity.conciliacaotransacao;

import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Id;
import javax.persistence.Column;
import br.com.kerubin.api.database.entity.AuditingEntity;
import javax.persistence.GeneratedValue;
import org.hibernate.annotations.GenericGenerator;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;
import javax.validation.constraints.NotNull;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import br.com.kerubin.api.cadastros.banco.TipoTransacao;
import br.com.kerubin.api.cadastros.banco.entity.conciliacaobancaria.ConciliacaoBancariaEntity;
import javax.persistence.ManyToOne;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import br.com.kerubin.api.cadastros.banco.SituacaoConciliacaoTrn;
import br.com.kerubin.api.cadastros.banco.entity.planoconta.PlanoContaEntity;
import br.com.kerubin.api.cadastros.banco.entity.conciliacaotransacaotitulo.ConciliacaoTransacaoTituloEntity;
import javax.persistence.OneToMany;
import javax.persistence.CascadeType;
import java.util.Set;
import java.util.HashSet;

@Entity
@Table(name = "conciliacao_transacao")
public class ConciliacaoTransacaoEntity extends AuditingEntity {

	@GeneratedValue(generator = "uuid2")
	@GenericGenerator(name = "uuid2", strategy = "uuid2")
	@Id
	@Column(name="id")
	private java.util.UUID id;
	
	@NotBlank(message="\"Identificador da transação\" é obrigatório.")
	@Size(max = 255, message = "\"Identificador da transação\" pode ter no máximo 255 caracteres.")
	@Column(name="trn_id")
	private String trnId;
	
	@NotNull(message="\"Data\" é obrigatório.")
	@Column(name="trn_data")
	private java.time.LocalDate trnData;
	
	@NotBlank(message="\"Histórico\" é obrigatório.")
	@Size(max = 255, message = "\"Histórico\" pode ter no máximo 255 caracteres.")
	@Column(name="trn_historico")
	private String trnHistorico;
	
	@NotBlank(message="\"Documento\" é obrigatório.")
	@Size(max = 255, message = "\"Documento\" pode ter no máximo 255 caracteres.")
	@Column(name="trn_documento")
	private String trnDocumento;
	
	@NotNull(message="\"trnTipo\" é obrigatório.")
	@Enumerated(EnumType.STRING)
	@Column(name="trn_tipo")
	private TipoTransacao trnTipo;
	
	@NotNull(message="\"Valor\" é obrigatório.")
	@Column(name="trn_valor")
	private java.math.BigDecimal trnValor;
	
	@NotNull(message="\"Conciliação bancária\" é obrigatório.")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "conciliacao_bancaria")
	private ConciliacaoBancariaEntity conciliacaoBancaria;
	
	@NotNull(message="\"situacaoConciliacaoTrn\" é obrigatório.")
	@Enumerated(EnumType.STRING)
	@Column(name="situacao_conciliacao_trn")
	private SituacaoConciliacaoTrn situacaoConciliacaoTrn;
	
	@Column(name="titulo_conciliado_id")
	private java.util.UUID tituloConciliadoId;
	
	@Size(max = 255, message = "\"Desc. tít. conc.\" pode ter no máximo 255 caracteres.")
	@Column(name="titulo_conciliado_desc")
	private String tituloConciliadoDesc;
	
	@Column(name="titulo_conciliado_valor")
	private java.math.BigDecimal tituloConciliadoValor;
	
	@Column(name="titulo_conciliado_data_ven")
	private java.time.LocalDate tituloConciliadoDataVen;
	
	@Column(name="titulo_conciliado_data_pag")
	private java.time.LocalDate tituloConciliadoDataPag;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "titulo_plano_contas")
	private PlanoContaEntity tituloPlanoContas;
	
	@Column(name="titulo_conciliado_multiple")
	private Boolean tituloConciliadoMultiple = false;
	
	@Column(name="data_conciliacao")
	private java.time.LocalDate dataConciliacao;
	
	@OneToMany(mappedBy = "conciliacaoTransacao", fetch = FetchType.EAGER, cascade = CascadeType.ALL , orphanRemoval = true)
	private Set<ConciliacaoTransacaoTituloEntity> conciliacaoTransacaoTitulos = new HashSet<>();
	
	@Column(name="conciliado_com_erro")
	private Boolean conciliadoComErro = false;
	
	@Size(max = 255, message = "\"Mensagem\" pode ter no máximo 255 caracteres.")
	@Column(name="conciliado_msg")
	private String conciliadoMsg;
	
	public java.util.UUID getId() {
		return id;
	}
	
	public String getTrnId() {
		return trnId;
	}
	
	public java.time.LocalDate getTrnData() {
		return trnData;
	}
	
	public String getTrnHistorico() {
		return trnHistorico;
	}
	
	public String getTrnDocumento() {
		return trnDocumento;
	}
	
	public TipoTransacao getTrnTipo() {
		return trnTipo;
	}
	
	public java.math.BigDecimal getTrnValor() {
		return trnValor;
	}
	
	public ConciliacaoBancariaEntity getConciliacaoBancaria() {
		return conciliacaoBancaria;
	}
	
	public SituacaoConciliacaoTrn getSituacaoConciliacaoTrn() {
		return situacaoConciliacaoTrn;
	}
	
	public java.util.UUID getTituloConciliadoId() {
		return tituloConciliadoId;
	}
	
	public String getTituloConciliadoDesc() {
		return tituloConciliadoDesc;
	}
	
	public java.math.BigDecimal getTituloConciliadoValor() {
		return tituloConciliadoValor;
	}
	
	public java.time.LocalDate getTituloConciliadoDataVen() {
		return tituloConciliadoDataVen;
	}
	
	public java.time.LocalDate getTituloConciliadoDataPag() {
		return tituloConciliadoDataPag;
	}
	
	public PlanoContaEntity getTituloPlanoContas() {
		return tituloPlanoContas;
	}
	
	public Boolean getTituloConciliadoMultiple() {
		return tituloConciliadoMultiple;
	}
	
	public boolean isTituloConciliadoMultiple() {
		return Boolean.TRUE.equals(tituloConciliadoMultiple);
	}
	
	public java.time.LocalDate getDataConciliacao() {
		return dataConciliacao;
	}
	
	public java.util.Set<ConciliacaoTransacaoTituloEntity> getConciliacaoTransacaoTitulos() {
		return conciliacaoTransacaoTitulos;
	}
	
	public Boolean getConciliadoComErro() {
		return conciliadoComErro;
	}
	
	public boolean isConciliadoComErro() {
		return Boolean.TRUE.equals(conciliadoComErro);
	}
	
	public String getConciliadoMsg() {
		return conciliadoMsg;
	}
	
	public void setId(java.util.UUID id) {
		this.id = id;
	}
	
	public void setTrnId(String trnId) {
		this.trnId = trnId != null ? trnId.trim() : trnId; // Chamadas REST fazem trim.
	}
	
	public void setTrnData(java.time.LocalDate trnData) {
		this.trnData = trnData;
	}
	
	public void setTrnHistorico(String trnHistorico) {
		this.trnHistorico = trnHistorico != null ? trnHistorico.trim() : trnHistorico; // Chamadas REST fazem trim.
	}
	
	public void setTrnDocumento(String trnDocumento) {
		this.trnDocumento = trnDocumento != null ? trnDocumento.trim() : trnDocumento; // Chamadas REST fazem trim.
	}
	
	public void setTrnTipo(TipoTransacao trnTipo) {
		this.trnTipo = trnTipo;
	}
	
	public void setTrnValor(java.math.BigDecimal trnValor) {
		this.trnValor = trnValor;
	}
	
	public void setConciliacaoBancaria(ConciliacaoBancariaEntity conciliacaoBancaria) {
		this.conciliacaoBancaria = conciliacaoBancaria;
	}
	
	public void setSituacaoConciliacaoTrn(SituacaoConciliacaoTrn situacaoConciliacaoTrn) {
		this.situacaoConciliacaoTrn = situacaoConciliacaoTrn;
	}
	
	public void setTituloConciliadoId(java.util.UUID tituloConciliadoId) {
		this.tituloConciliadoId = tituloConciliadoId;
	}
	
	public void setTituloConciliadoDesc(String tituloConciliadoDesc) {
		this.tituloConciliadoDesc = tituloConciliadoDesc != null ? tituloConciliadoDesc.trim() : tituloConciliadoDesc; // Chamadas REST fazem trim.
	}
	
	public void setTituloConciliadoValor(java.math.BigDecimal tituloConciliadoValor) {
		this.tituloConciliadoValor = tituloConciliadoValor;
	}
	
	public void setTituloConciliadoDataVen(java.time.LocalDate tituloConciliadoDataVen) {
		this.tituloConciliadoDataVen = tituloConciliadoDataVen;
	}
	
	public void setTituloConciliadoDataPag(java.time.LocalDate tituloConciliadoDataPag) {
		this.tituloConciliadoDataPag = tituloConciliadoDataPag;
	}
	
	public void setTituloPlanoContas(PlanoContaEntity tituloPlanoContas) {
		this.tituloPlanoContas = tituloPlanoContas;
	}
	
	public void setTituloConciliadoMultiple(Boolean tituloConciliadoMultiple) {
		this.tituloConciliadoMultiple = tituloConciliadoMultiple;
	}
	
	public void setDataConciliacao(java.time.LocalDate dataConciliacao) {
		this.dataConciliacao = dataConciliacao;
	}
	
	public void setConciliacaoTransacaoTitulos(java.util.Set<ConciliacaoTransacaoTituloEntity> conciliacaoTransacaoTitulos) {
		// First remove existing items.
		if (this.conciliacaoTransacaoTitulos != null) {
			this.conciliacaoTransacaoTitulos.clear();
		}
		
		if (conciliacaoTransacaoTitulos != null) {
			conciliacaoTransacaoTitulos.forEach(this::addConciliacaoTransacaoTitulo);
		}
	}
	
	public void addConciliacaoTransacaoTitulo(ConciliacaoTransacaoTituloEntity conciliacaoTransacaoTitulo) {
		this.conciliacaoTransacaoTitulos.add(conciliacaoTransacaoTitulo);
		conciliacaoTransacaoTitulo.setConciliacaoTransacao(this);
	}
	
	public void removeConciliacaoTransacaoTitulo(ConciliacaoTransacaoTituloEntity conciliacaoTransacaoTitulo) {
		this.conciliacaoTransacaoTitulos.remove(conciliacaoTransacaoTitulo);
		conciliacaoTransacaoTitulo.setConciliacaoTransacao(null);
	}
	
	public void setConciliadoComErro(Boolean conciliadoComErro) {
		this.conciliadoComErro = conciliadoComErro;
	}
	
	public void setConciliadoMsg(String conciliadoMsg) {
		this.conciliadoMsg = conciliadoMsg != null ? conciliadoMsg.trim() : conciliadoMsg; // Chamadas REST fazem trim.
	}
	
	public void assign(ConciliacaoTransacaoEntity source) {
		if (source != null) {
			this.setId(source.getId());
			this.setTrnId(source.getTrnId());
			this.setTrnData(source.getTrnData());
			this.setTrnHistorico(source.getTrnHistorico());
			this.setTrnDocumento(source.getTrnDocumento());
			this.setTrnTipo(source.getTrnTipo());
			this.setTrnValor(source.getTrnValor());
			this.setConciliacaoBancaria(source.getConciliacaoBancaria());
			this.setSituacaoConciliacaoTrn(source.getSituacaoConciliacaoTrn());
			this.setTituloConciliadoId(source.getTituloConciliadoId());
			this.setTituloConciliadoDesc(source.getTituloConciliadoDesc());
			this.setTituloConciliadoValor(source.getTituloConciliadoValor());
			this.setTituloConciliadoDataVen(source.getTituloConciliadoDataVen());
			this.setTituloConciliadoDataPag(source.getTituloConciliadoDataPag());
			this.setTituloPlanoContas(source.getTituloPlanoContas());
			this.setTituloConciliadoMultiple(source.getTituloConciliadoMultiple());
			this.setDataConciliacao(source.getDataConciliacao());
			this.setConciliacaoTransacaoTitulos(source.getConciliacaoTransacaoTitulos());
			this.setConciliadoComErro(source.getConciliadoComErro());
			this.setConciliadoMsg(source.getConciliadoMsg());
			this.setCreatedBy(source.getCreatedBy());
			this.setCreatedDate(source.getCreatedDate());
			this.setLastModifiedBy(source.getLastModifiedBy());
			this.setLastModifiedDate(source.getLastModifiedDate());
		}
	}
	
	public ConciliacaoTransacaoEntity clone() {
		return clone(new java.util.HashMap<>());
	}
	
	public ConciliacaoTransacaoEntity clone(java.util.Map<Object, Object> visited) {
		if (visited.containsKey(this)) {
			return (ConciliacaoTransacaoEntity) visited.get(this);
		}
				
		ConciliacaoTransacaoEntity theClone = new ConciliacaoTransacaoEntity();
		visited.put(this, theClone);
		
		theClone.setId(this.getId());
		theClone.setTrnId(this.getTrnId());
		theClone.setTrnData(this.getTrnData());
		theClone.setTrnHistorico(this.getTrnHistorico());
		theClone.setTrnDocumento(this.getTrnDocumento());
		theClone.setTrnTipo(this.getTrnTipo());
		theClone.setTrnValor(this.getTrnValor());
		theClone.setConciliacaoBancaria(this.getConciliacaoBancaria() != null ? this.getConciliacaoBancaria().clone(visited) : null);
		theClone.setSituacaoConciliacaoTrn(this.getSituacaoConciliacaoTrn());
		theClone.setTituloConciliadoId(this.getTituloConciliadoId());
		theClone.setTituloConciliadoDesc(this.getTituloConciliadoDesc());
		theClone.setTituloConciliadoValor(this.getTituloConciliadoValor());
		theClone.setTituloConciliadoDataVen(this.getTituloConciliadoDataVen());
		theClone.setTituloConciliadoDataPag(this.getTituloConciliadoDataPag());
		theClone.setTituloPlanoContas(this.getTituloPlanoContas() != null ? this.getTituloPlanoContas().clone(visited) : null);
		theClone.setTituloConciliadoMultiple(this.getTituloConciliadoMultiple());
		theClone.setDataConciliacao(this.getDataConciliacao());
		theClone.setConciliacaoTransacaoTitulos(this.getConciliacaoTransacaoTitulos() != null ? this.getConciliacaoTransacaoTitulos().stream().map(it -> it.clone(visited)).collect(java.util.stream.Collectors.toSet()) : null);
		theClone.setConciliadoComErro(this.getConciliadoComErro());
		theClone.setConciliadoMsg(this.getConciliadoMsg());
		theClone.setCreatedBy(this.getCreatedBy());
		theClone.setCreatedDate(this.getCreatedDate());
		theClone.setLastModifiedBy(this.getLastModifiedBy());
		theClone.setLastModifiedDate(this.getLastModifiedDate());
		
		return theClone;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ConciliacaoTransacaoEntity other = (ConciliacaoTransacaoEntity) obj;
			
		
		// Field: id
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id))
			return false;
		
		// Field: trnId
		if (trnId == null) {
			if (other.trnId != null) {
				return false;
			}
		} else if (!trnId.equals(other.trnId))
			return false;
		
		// Field: trnData
		if (trnData == null) {
			if (other.trnData != null) {
				return false;
			}
		} else if (!trnData.equals(other.trnData))
			return false;
		
		// Field: trnHistorico
		if (trnHistorico == null) {
			if (other.trnHistorico != null) {
				return false;
			}
		} else if (!trnHistorico.equals(other.trnHistorico))
			return false;
		
		// Field: trnDocumento
		if (trnDocumento == null) {
			if (other.trnDocumento != null) {
				return false;
			}
		} else if (!trnDocumento.equals(other.trnDocumento))
			return false;
		
		// Field: trnTipo
		if (trnTipo == null) {
			if (other.trnTipo != null) {
				return false;
			}
		} else if (!trnTipo.equals(other.trnTipo))
			return false;
		
		// Field: trnValor
		if (trnValor == null) {
			if (other.trnValor != null) {
				return false;
			}
		} else if (!trnValor.equals(other.trnValor))
			return false;
		
		// Field: conciliacaoBancaria
		if (conciliacaoBancaria == null) {
			if (other.conciliacaoBancaria != null) {
				return false;
			}
		} else if (conciliacaoBancaria.getId() == null) {
			if (other.conciliacaoBancaria.getId() != null)
				return false;
		} else if (!conciliacaoBancaria.getId().equals(other.conciliacaoBancaria.getId())) 
			return false;
		
		// Field: situacaoConciliacaoTrn
		if (situacaoConciliacaoTrn == null) {
			if (other.situacaoConciliacaoTrn != null) {
				return false;
			}
		} else if (!situacaoConciliacaoTrn.equals(other.situacaoConciliacaoTrn))
			return false;
		
		// Field: tituloConciliadoId
		if (tituloConciliadoId == null) {
			if (other.tituloConciliadoId != null) {
				return false;
			}
		} else if (!tituloConciliadoId.equals(other.tituloConciliadoId))
			return false;
		
		// Field: tituloConciliadoDesc
		if (tituloConciliadoDesc == null) {
			if (other.tituloConciliadoDesc != null) {
				return false;
			}
		} else if (!tituloConciliadoDesc.equals(other.tituloConciliadoDesc))
			return false;
		
		// Field: tituloConciliadoValor
		if (tituloConciliadoValor == null) {
			if (other.tituloConciliadoValor != null) {
				return false;
			}
		} else if (!tituloConciliadoValor.equals(other.tituloConciliadoValor))
			return false;
		
		// Field: tituloConciliadoDataVen
		if (tituloConciliadoDataVen == null) {
			if (other.tituloConciliadoDataVen != null) {
				return false;
			}
		} else if (!tituloConciliadoDataVen.equals(other.tituloConciliadoDataVen))
			return false;
		
		// Field: tituloConciliadoDataPag
		if (tituloConciliadoDataPag == null) {
			if (other.tituloConciliadoDataPag != null) {
				return false;
			}
		} else if (!tituloConciliadoDataPag.equals(other.tituloConciliadoDataPag))
			return false;
		
		// Field: tituloPlanoContas
		if (tituloPlanoContas == null) {
			if (other.tituloPlanoContas != null) {
				return false;
			}
		} else if (tituloPlanoContas.getId() == null) {
			if (other.tituloPlanoContas.getId() != null)
				return false;
		} else if (!tituloPlanoContas.getId().equals(other.tituloPlanoContas.getId())) 
			return false;
		
		// Field: tituloConciliadoMultiple
		if (tituloConciliadoMultiple == null) {
			if (other.tituloConciliadoMultiple != null) {
				return false;
			}
		} else if (!tituloConciliadoMultiple.equals(other.tituloConciliadoMultiple))
			return false;
		
		// Field: dataConciliacao
		if (dataConciliacao == null) {
			if (other.dataConciliacao != null) {
				return false;
			}
		} else if (!dataConciliacao.equals(other.dataConciliacao))
			return false;
		
		// Field: conciliacaoTransacaoTitulos
		if (conciliacaoTransacaoTitulos == null) {
			if (other.conciliacaoTransacaoTitulos != null) {
				return false;
			}
		} else if (conciliacaoTransacaoTitulos.size() != other.conciliacaoTransacaoTitulos.size()) {
			return false;
		} else if (!conciliacaoTransacaoTitulos.stream().allMatch(it1 -> other.conciliacaoTransacaoTitulos.stream().anyMatch(it2 -> it1.getId().equals(it2.getId())))) {
			return false;
		}
		
		// Field: conciliadoComErro
		if (conciliadoComErro == null) {
			if (other.conciliadoComErro != null) {
				return false;
			}
		} else if (!conciliadoComErro.equals(other.conciliadoComErro))
			return false;
		
		// Field: conciliadoMsg
		if (conciliadoMsg == null) {
			if (other.conciliadoMsg != null) {
				return false;
			}
		} else if (!conciliadoMsg.equals(other.conciliadoMsg))
			return false;
		
		// Field: createdBy
		if (createdBy == null) {
			if (other.createdBy != null) {
				return false;
			}
		} else if (!createdBy.equals(other.createdBy))
			return false;
		
		// Field: createdDate
		if (createdDate == null) {
			if (other.createdDate != null) {
				return false;
			}
		} else if (!createdDate.equals(other.createdDate))
			return false;
		
		// Field: lastModifiedBy
		if (lastModifiedBy == null) {
			if (other.lastModifiedBy != null) {
				return false;
			}
		} else if (!lastModifiedBy.equals(other.lastModifiedBy))
			return false;
		
		// Field: lastModifiedDate
		if (lastModifiedDate == null) {
			if (other.lastModifiedDate != null) {
				return false;
			}
		} else if (!lastModifiedDate.equals(other.lastModifiedDate))
			return false;
		
		return true;
	}
	
	@Override
	public int hashCode() {
		return 31;
	}
	
	/* 
	@Override
	public String toString() {
		// Enabling toString for JPA entities will implicitly trigger lazy loading on all fields.
	}
	*/

}
